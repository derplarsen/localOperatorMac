## Overriding values for Chart's values.yaml
## Example values to run Confluent Operator in Private Cloud
service:
  enabled: true
  type: LoadBalancer
  ports:
    app:
      name: kafka-broker
      port: 9021
      targetPort: 9021
      protocol: TCP

global:
  provider:
    name: private
    ## if any name which indicates regions
    ##
    region: anyregion
    kubernetes:
       deployment:
         ## If kubernetes is deployed in multi zone mode then specify availability-zones as appropriate
         ## If kubernetes is deployed in single availability zone then specify appropriate values
         ## For the private cloud, use kubernetes node labels as appropriate
         zones:
          - myzones
    ##  more information can be found here
    ##  https://kubernetes.io/docs/concepts/storage/storage-classes/
    storage:
      ## Use Retain if you want to persist data after CP cluster has been uninstalled
      reclaimPolicy: Delete
      provisioner: docker.io/hostpath
      parameters: {}
    ##
    ## Docker registry endpoint where Confluent Images are available.
    ##
    registry:
      fqdn: docker.io
      credential:
        required: false
  sasl:
    plain:
      username: test
      password: test123
## Zookeeper cluster
##
zookeeper:
  name: zookeeper
  replicas: 1
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
  disableHostPort: false
## Kafka Cluster
##
kafka:
  name: kafka
  replicas: 1
  jvmConfig:
    heapSize: 1G
  resources:
    requests:
      cpu: 200m
      memory: 1Gi
  loadBalancer:
    enabled: true
    domain: "SASL_PLAINTEXT"
  tls:
    enabled: false
    fullchain: |-
    privkey: |-
    cacerts: |-
  metricReporter:
    enabled: true
  disableHostPort: true
## Connect Cluster
##
connect:
  name: connectors
  jvmConfig:
    heapSize: 512M
  replicas: 1
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
  tls:
    enabled: false
    ## "" for none, "tls" for mutual auth
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      brokerCount: 1
    schemaRegistry:
      enabled: true
      url: http://schemaregistry:8081
  disableHostPort: true
## Replicator Connect Cluster
##
replicator:
  name: replicator
  jvmConfig:
    heapSize: 512M
  replicas: 1
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 1
      bootstrapEndpoint: kafka:9071
  disableHostPort: true
##
## Schema Registry
##
schemaregistry:
  name: schemaregistry
  jvmConfig:
    heapSize: 512M
  replicas: 1
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 1
      bootstrapEndpoint: kafka:9071
  disableHostPort: true

##
## KSQL
##
ksql:
  name: ksql
  replicas: 1
  jvmConfig:
    heapSize: 512M
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 1
      bootstrapEndpoint: kafka:9071
      brokerEndpoints: kafka-0.kafka:9071
#,kafka-1.kafka:9071,kafka-2.kafka:9071
    schemaRegistry:
      enabled: false
      tls:
        enabled: false
        authentication:
          type: ""
      url: http://schemaregistry:8081
  disableHostPort: true

## Control Center (C3) Resource configuration
##
controlcenter:
  name: controlcenter
  license: ""
  ##
  ## C3 dependencies
  ##
  jvmConfig:
    heapSize: 512M
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
  dependencies:
    c3KafkaCluster:
      brokerCount: 1
      bootstrapEndpoint: kafka:9071
      zookeeper:
        endpoint: zookeeper:2181
    connectCluster:
      enabled: true
      url: http://connectors:8083
    ksql:
      enabled: true
      url: http://ksql:9088
    schemaRegistry:
      enabled: true
      url: http://schemaregistry:8081
  ##
  ## C3 External Access
  ##
  loadBalancer:
    enabled: true
    domain: "SASL_PLAINTEXT"
  ##
  ## TLS configuration
  ##
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  ##
  ## C3 authentication
  ##
  auth:
    basic:
      enabled: true
      ##
      ## map with key as user and value as password and role
      property:
        admin: Developer1,Administrators
        disallowed: no_access
  disableHostPort: true
